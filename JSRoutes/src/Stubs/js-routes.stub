/**
 * TODO
 * change path
 * create stub for the path
 */
import routeList from 'DummyRouteList';

function JsRoute() {
    this.routes = routeList;
    
    this.get = function (name, parameters = []) {

        if (this.routes[name] === undefined) {
            return '';
        }

        return _parseParams(this.routes[name], parameters);
    };

    function _parseParams(route, parameters) {

        if (route.parameters === undefined) return route.url;

        let result = route.url;

        route.parameters.forEach((param) => {
            // @todo: Need to check if parameter is optional
            // if optional and param is not provided, just remove it ?
            // or param has default value
            // conditions: if param is optional or has default value
            // if param has default value, get it
            if (parameters[param] === undefined) {

                // is param optional ? code..
                // is param has default value ? code..

                throw 'Parameter ' + param + ' is required';
            }

            result = result.replace(
                new RegExp('\{' + param + '\??\}'),
                parameters[param]
            );
        });

        return result;
    }

    function _isNotOptional(route, param) {
        return ! isOptional(route, param);
    }

    function isOptional(route, param) {
        // determine if param is optional
        return false;
    }

    function setRoutes(routes) {
        this.routes = routes;
    }
}

export let make = (routes = {}) => {
    let jsRouteObj = new JsRoute();

    if (routes) {
        jsRouteObj.setRoutes(routes);
    }

    return jsRouteObj;
};

export default new JsRoute();
